events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Prefer client scheme provided by Cloudflare/Cloudflared when present
    map $http_x_forwarded_proto $client_scheme {
        default $http_x_forwarded_proto; # https from tunnel
        ""      $scheme;                # fallback to local scheme (http)
    }

    server {
        listen 80 default_server;
        server_name localhost;
        client_max_body_size 100m;

        # Proxy WebSocket requests directly to FastAPI 
        location /ws/ {
            proxy_pass http://fastapi:8000/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $client_scheme;
        }

        
        # Serve all other requests from FastAPI
        location /api/ {
            proxy_pass http://fastapi:8000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $client_scheme;  # ✅ preserve tunnel https
            proxy_set_header Cookie $http_cookie;  # ✅ Required

        }

        # Proxy for local GCS emulator to avoid CORS in browser
        # Map /gcs/{bucket}/{object} to XML API path-style (supports PUT/GET/HEAD)
        location ~ ^/gcs/([^/]+)/(.+)$ {
            set $bucket $1;
            set $object $2;
            proxy_http_version 1.1;
            proxy_set_header Host storage.googleapis.com;
            proxy_set_header Content-Length $content_length;
            proxy_set_header Transfer-Encoding "";
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, OPTIONS, DELETE";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, Range, x-goog-meta-filename, x-goog-meta-media-table, x-goog-meta-entity-id, x-goog-meta-media-format, x-goog-meta-media-order, x-goog-meta-mime-type";
            if ($request_method = OPTIONS) { return 204; }
            proxy_pass http://gcs:4443/$bucket/$object;
        }


        location / {
            proxy_pass http://frontend:4173;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $client_scheme;
            # --- Add these headers for WebSocket (Vite HMR) ---
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            # --- End added section ---
        }



    }
}
