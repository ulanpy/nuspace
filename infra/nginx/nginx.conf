events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # HTTP Server - Redirect to HTTPS
    server {
        listen 80;
        server_name nuspace.kz www.nuspace.kz stage.nuspace.kz;
        return 301 https://$host$request_uri;
    }

    # HTTPS Server with Cloudflare Origin Certificate
    server {
        listen 443 ssl;
        server_name nuspace.kz www.nuspace.kz stage.nuspace.kz;

        if ($host = www.nuspace.kz) {
            return 301 https://nuspace.kz$request_uri;
        }
        # Cloudflare Origin SSL
        ssl_certificate     /etc/ssl/cloudflare/origin.crt;
        ssl_certificate_key /etc/ssl/cloudflare/origin.key;

        # Security Settings
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers         'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_session_cache   shared:SSL:10m;

        # IP restrictions now handled at GCP firewall level
        # No need for duplicate nginx restrictions

        # Get real client IP from Cloudflare header
        # (GCP firewall ensures only Cloudflare IPs reach here)
        real_ip_header CF-Connecting-IP;

        # Application Configuration
        root /var/www/my-app/dist;
        index index.html;
        
        # Telegram Mini App Security Headers
        add_header X-Frame-Options "ALLOWALL" always;
        add_header Content-Security-Policy "frame-ancestors 'self' https://web.telegram.org https://telegram.org https://t.me" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # API Proxy
        location /api {
            proxy_pass http://fastapi:8000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Telegram Mini App headers for API calls
            add_header X-Frame-Options "ALLOWALL" always;
            add_header Content-Security-Policy "frame-ancestors 'self' https://web.telegram.org https://telegram.org https://t.me" always;
        }

        # WebSocket
        location /ws/ {
            proxy_pass http://fastapi:8000/ws/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }

        location = /favicon.ico {
            alias /var/www/my-app/dist/favicon.ico;
            access_log off;
            log_not_found off;
            expires max;
        }
        # Static Files
        location / {
            autoindex off;
            try_files $uri $uri/ /index.html;
        }

        # Cache static assets
        location ~* \.(js|css|png|jpg|woff2)$ {
            expires 1y;
            add_header Cache-Control "public";
        }
    }


    # VPN-only

    server {
        listen 443 ssl;
        server_name vpn.nuspace.kz;

        # Cloudflare Origin SSL
        # ssl_certificate     /etc/ssl/cloudflare/origin.crt;
        # ssl_certificate_key /etc/ssl/cloudflare/origin.key;

        # # Security Settings
        # ssl_protocols       TLSv1.2 TLSv1.3;
        # ssl_prefer_server_ciphers on;
        # ssl_ciphers         'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        # ssl_session_cache   shared:SSL:10m;

    
        allow 172.28.0.0/24; # Docker network (all containers)
        allow 34.133.121.60; # Public IP of the server
        deny all;

        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  
            proxy_set_header X-Script-Name /grafana;
            rewrite ^/grafana(/.*)$ $1 break;
	        rewrite ^/grafana$ /grafana/ permanent;  
      }

     location /alloy/ {
            proxy_pass http://alloy:12345/alloy/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    location /prometheus/ {
        proxy_pass http://prometheus:9090/prometheus/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
 
        location / {
            root /etc/nginx;
            index vpn-index.html;
            try_files /vpn-index.html =404;
       }
    }
}
